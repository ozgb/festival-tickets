/**
 * @fileoverview gRPC-Web generated client stub for purchase
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v4.25.1
// source: purchase.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.purchase = require('./purchase_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.purchase.ProductServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.purchase.ProductServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.purchase.GetTicketTypesRequest,
 *   !proto.purchase.GetTicketTypesResponse>}
 */
const methodDescriptor_ProductService_GetTicketTypes = new grpc.web.MethodDescriptor(
  '/purchase.ProductService/GetTicketTypes',
  grpc.web.MethodType.UNARY,
  proto.purchase.GetTicketTypesRequest,
  proto.purchase.GetTicketTypesResponse,
  /**
   * @param {!proto.purchase.GetTicketTypesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.purchase.GetTicketTypesResponse.deserializeBinary
);


/**
 * @param {!proto.purchase.GetTicketTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.purchase.GetTicketTypesResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.purchase.GetTicketTypesResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.purchase.ProductServiceClient.prototype.getTicketTypes =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/purchase.ProductService/GetTicketTypes',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetTicketTypes,
      callback);
};


/**
 * @param {!proto.purchase.GetTicketTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.purchase.GetTicketTypesResponse>}
 *     Promise that resolves to the response
 */
proto.purchase.ProductServicePromiseClient.prototype.getTicketTypes =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/purchase.ProductService/GetTicketTypes',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetTicketTypes);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.purchase.GetTicketDurationsRequest,
 *   !proto.purchase.GetTicketDurationsResponse>}
 */
const methodDescriptor_ProductService_GetTicketDurations = new grpc.web.MethodDescriptor(
  '/purchase.ProductService/GetTicketDurations',
  grpc.web.MethodType.UNARY,
  proto.purchase.GetTicketDurationsRequest,
  proto.purchase.GetTicketDurationsResponse,
  /**
   * @param {!proto.purchase.GetTicketDurationsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.purchase.GetTicketDurationsResponse.deserializeBinary
);


/**
 * @param {!proto.purchase.GetTicketDurationsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.purchase.GetTicketDurationsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.purchase.GetTicketDurationsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.purchase.ProductServiceClient.prototype.getTicketDurations =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/purchase.ProductService/GetTicketDurations',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetTicketDurations,
      callback);
};


/**
 * @param {!proto.purchase.GetTicketDurationsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.purchase.GetTicketDurationsResponse>}
 *     Promise that resolves to the response
 */
proto.purchase.ProductServicePromiseClient.prototype.getTicketDurations =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/purchase.ProductService/GetTicketDurations',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetTicketDurations);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.purchase.AddTicketToBasketRequest,
 *   !proto.purchase.AddTicketToBasketResponse>}
 */
const methodDescriptor_ProductService_AddTicketToBasket = new grpc.web.MethodDescriptor(
  '/purchase.ProductService/AddTicketToBasket',
  grpc.web.MethodType.UNARY,
  proto.purchase.AddTicketToBasketRequest,
  proto.purchase.AddTicketToBasketResponse,
  /**
   * @param {!proto.purchase.AddTicketToBasketRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.purchase.AddTicketToBasketResponse.deserializeBinary
);


/**
 * @param {!proto.purchase.AddTicketToBasketRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.purchase.AddTicketToBasketResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.purchase.AddTicketToBasketResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.purchase.ProductServiceClient.prototype.addTicketToBasket =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/purchase.ProductService/AddTicketToBasket',
      request,
      metadata || {},
      methodDescriptor_ProductService_AddTicketToBasket,
      callback);
};


/**
 * @param {!proto.purchase.AddTicketToBasketRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.purchase.AddTicketToBasketResponse>}
 *     Promise that resolves to the response
 */
proto.purchase.ProductServicePromiseClient.prototype.addTicketToBasket =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/purchase.ProductService/AddTicketToBasket',
      request,
      metadata || {},
      methodDescriptor_ProductService_AddTicketToBasket);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.purchase.PurchaseOrderRequest,
 *   !proto.purchase.PurchaseOrderResponse>}
 */
const methodDescriptor_ProductService_PurchaseOrder = new grpc.web.MethodDescriptor(
  '/purchase.ProductService/PurchaseOrder',
  grpc.web.MethodType.UNARY,
  proto.purchase.PurchaseOrderRequest,
  proto.purchase.PurchaseOrderResponse,
  /**
   * @param {!proto.purchase.PurchaseOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.purchase.PurchaseOrderResponse.deserializeBinary
);


/**
 * @param {!proto.purchase.PurchaseOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.purchase.PurchaseOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.purchase.PurchaseOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.purchase.ProductServiceClient.prototype.purchaseOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/purchase.ProductService/PurchaseOrder',
      request,
      metadata || {},
      methodDescriptor_ProductService_PurchaseOrder,
      callback);
};


/**
 * @param {!proto.purchase.PurchaseOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.purchase.PurchaseOrderResponse>}
 *     Promise that resolves to the response
 */
proto.purchase.ProductServicePromiseClient.prototype.purchaseOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/purchase.ProductService/PurchaseOrder',
      request,
      metadata || {},
      methodDescriptor_ProductService_PurchaseOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.purchase.GetOrderRequest,
 *   !proto.purchase.GetOrderResponse>}
 */
const methodDescriptor_ProductService_GetOrder = new grpc.web.MethodDescriptor(
  '/purchase.ProductService/GetOrder',
  grpc.web.MethodType.UNARY,
  proto.purchase.GetOrderRequest,
  proto.purchase.GetOrderResponse,
  /**
   * @param {!proto.purchase.GetOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.purchase.GetOrderResponse.deserializeBinary
);


/**
 * @param {!proto.purchase.GetOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.purchase.GetOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.purchase.GetOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.purchase.ProductServiceClient.prototype.getOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/purchase.ProductService/GetOrder',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetOrder,
      callback);
};


/**
 * @param {!proto.purchase.GetOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.purchase.GetOrderResponse>}
 *     Promise that resolves to the response
 */
proto.purchase.ProductServicePromiseClient.prototype.getOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/purchase.ProductService/GetOrder',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.purchase.GetOrderStatsRequest,
 *   !proto.purchase.OrderStats>}
 */
const methodDescriptor_ProductService_GetOrderStats = new grpc.web.MethodDescriptor(
  '/purchase.ProductService/GetOrderStats',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.purchase.GetOrderStatsRequest,
  proto.purchase.OrderStats,
  /**
   * @param {!proto.purchase.GetOrderStatsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.purchase.OrderStats.deserializeBinary
);


/**
 * @param {!proto.purchase.GetOrderStatsRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.purchase.OrderStats>}
 *     The XHR Node Readable Stream
 */
proto.purchase.ProductServiceClient.prototype.getOrderStats =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/purchase.ProductService/GetOrderStats',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetOrderStats);
};


/**
 * @param {!proto.purchase.GetOrderStatsRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.purchase.OrderStats>}
 *     The XHR Node Readable Stream
 */
proto.purchase.ProductServicePromiseClient.prototype.getOrderStats =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/purchase.ProductService/GetOrderStats',
      request,
      metadata || {},
      methodDescriptor_ProductService_GetOrderStats);
};


module.exports = proto.purchase;

