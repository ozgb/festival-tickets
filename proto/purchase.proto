syntax = "proto3";

// Restriction - to make types convertable directly from SQLx, all response types must be flat
// Also, only basic protobuf types are supported, i.e. no Timestamp etc.
// See https://github.com/tokio-rs/prost/issues/876

package purchase;

message Order {
    string id = 5;
    string ticket_type_id = 7;
    optional string user_id = 10;
    int32 duration = 2;
    float price = 3;
    string reserved_until = 8;
    optional string purchased_at = 9;
}

message User {
    string id = 1;
    string name = 2;
    string address = 3;
    string email = 4;
    string order_id = 5;
}

message TicketType {
    string id = 1;
    string display = 2;
    bool sold_out = 3;
}

message OrderStats {
    int32 duration_days = 4;
    int32 order_limit = 5;
    int32 order_count = 6;
}

service ProductService {
    rpc GetTicketTypes(GetTicketTypesRequest) returns (GetTicketTypesResponse) {}
    rpc GetTicketDurations(GetTicketDurationsRequest) returns (GetTicketDurationsResponse) {}
    rpc AddTicketToBasket(AddTicketToBasketRequest) returns (AddTicketToBasketResponse) {}
    rpc AddUserInfo(AddUserInfoRequest) returns (AddUserInfoResponse) {}
    rpc PurchaseOrder(PurchaseOrderRequest) returns (PurchaseOrderResponse) {}
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {}
    rpc GetOrderStats(GetOrderStatsRequest) returns (stream OrderStats) {}
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
    // TODO
    // GetNumRemaining
}

message GetOrderStatsRequest {}

message GetOrderStatsResponse {
    repeated OrderStats order_stats = 1;
}

message GetOrderRequest {
    string id = 1;
}

message GetOrderResponse {
    Order order = 1;
}

message GetUserRequest {
    string id = 1;
}

message GetUserResponse {
    User user = 1;
}

message AddUserInfoRequest {
    string order_id = 1;
    string user_name = 2;
    string user_address = 3;
    string user_email = 4;
}

message AddUserInfoResponse {
    Order order = 1;
}

message PurchaseOrderRequest {
    string id = 1;
}

message PurchaseOrderResponse {
    Order order = 1;
}

message GetTicketTypesRequest {}

message GetTicketTypesResponse {
    repeated TicketType ticket_types = 1;
}

message GetTicketDurationsRequest {
    string ticket_type_id = 3;
}

message GetTicketDurationsResponse {
    repeated int32 ticket_durations = 3;
}

message AddTicketToBasketRequest {
    string ticket_type_id = 3;
    int32 duration = 5;
}

message AddTicketToBasketResponse {
    Order order = 2;
}
