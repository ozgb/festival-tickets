syntax = "proto3";

package purchase;

message Order {
    string id = 5;
    TicketType type = 1;
    uint32 duration = 2;
    float price = 3;
    uint64 reserved_until = 4;
    optional uint64 purchased_at = 6;
}

message TicketType {
    string id = 1;
    string display = 2;
    bool sold_out = 3;
}

message OrderStats {
    uint32 duration_days = 1;
    uint32 order_limit = 2;
    uint32 order_count = 3;
}

service ProductService {
    rpc GetTicketTypes(GetTicketTypesRequest) returns (GetTicketTypesResponse) {}
    rpc GetTicketDurations(GetTicketDurationsRequest) returns (GetTicketDurationsResponse) {}
    rpc AddTicketToBasket(AddTicketToBasketRequest) returns (AddTicketToBasketResponse) {}
    rpc PurchaseOrder(PurchaseOrderRequest) returns (PurchaseOrderResponse) {}
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {}
    rpc GetOrderStats(GetOrderStatsRequest) returns (stream OrderStats) {}
    // TODO
    // GetNumRemaining
}

message GetOrderStatsRequest {}

message GetOrderStatsResponse {
    repeated OrderStats order_stats = 1;
}

message GetOrderRequest {
    string id = 1;
}

message GetOrderResponse {
    Order order = 1;
}

message PurchaseOrderRequest {
    string id = 1;
}

message PurchaseOrderResponse {
    Order order = 1;
}

message GetTicketTypesRequest {}

message GetTicketTypesResponse {
    repeated TicketType ticket_types = 1;
}

message GetTicketDurationsRequest {
    string ticket_type_id = 3;
}

message GetTicketDurationsResponse {
    repeated uint32 ticket_durations = 2;
}

message AddTicketToBasketRequest {
    string ticket_type_id = 3;
    uint32 duration = 4;
}

message AddTicketToBasketResponse {
    Order order = 2;
}
